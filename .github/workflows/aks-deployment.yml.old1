name: Deploy AKS Cluster

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy-aks:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout Code
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Set up Terraform
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.4 # Specify the desired Terraform version

    # Step 3: Install Azure CLI
    - name: Install Azure CLI
      run: |
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

    # Step 4: Log in to Azure with User Credentials
    - name: Log in to Azure with User Credentials
      run: |
        az login --username ${{ secrets.AZURE_USERNAME }} --password ${{ secrets.AZURE_PASSWORD }}

    # Step 5: Set up Terraform Variables (optional, if not in TF files)
    - name: Set up Terraform Variables
      run: |
        echo "AZURE_RESOURCE_GROUP=${{ secrets.AZURE_RESOURCE_GROUP }}" >> $GITHUB_ENV
        echo "AZURE_LOCATION=${{ secrets.AZURE_LOCATION }}" >> $GITHUB_ENV
        echo "AKS_CLUSTER_NAME=${{ secrets.AKS_CLUSTER_NAME }}" >> $GITHUB_ENV

    # Step 6: Initialize Terraform
    - name: Terraform Init
      run: terraform init

    # Step 7: Terraform Plan
    - name: Terraform Plan
      run: terraform plan -var-file="../../.github/terraform.tfvars"

    # Step 8: Terraform Apply
    - name: Terraform Apply
      run: terraform apply -var-file="../../.github/terraform.tfvars" -auto-approve

    # Step 9: Verify AKS Deployment
    - name: Verify AKS Deployment
      run: |
        az aks show \
          --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
          --name ${{ secrets.AKS_CLUSTER_NAME }}